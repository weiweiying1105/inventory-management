// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId String @id
  name   String
  email  String
}


model Products {
  productId     Int         @id @default(autoincrement()) // 改为 productId
  name          String
  price         Float
  rating        Float
  stockQuantity Int
  image         String
  sales         Sales[]
  purchases     Purchases[]
  categoryId  Int?      // 可选的分类 ID
  category    Category? @relation(fields: [categoryId], references: [id]) // 建立关系
}
// 产品分类
model Category {
  id  Int @id @default(autoincrement())
  categoryName String
  products  Products[] // 一个类别下有多个产品，一对多的关系
}
model Sales {
  id          Int      @id @default(autoincrement())
  saleId      String   @unique
  productId   Int
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Products @relation(fields: [productId], references: [productId]) // 更新引用
}

model Purchases {
  id          Int      @id @default(autoincrement())
  purchaseId  String   @unique
  productId   Int
  timestamp   DateTime
  quantity    Int
  unitCost    Float
  totalCost   Float
  product     Products @relation(fields: [productId], references: [productId]) // 更新引用
}

model Expenses {
  expenseId String   @id
  category  String
  amount    Float
  timestamp DateTime
}

model SalesSummary {
  salesSummaryId   String   @id
  totalValue       Float
  changePercentage Float?
  date             DateTime
}

model PurchaseSummary {
  purchaseSummaryId String   @id
  totalPurchased    Float
  changePercentage  Float?
  date              DateTime
}

model ExpenseSummary {
  expenseSummaryId  String              @id
  totalExpenses     Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  expenseByCategoryId String         @id
  expenseSummaryId    String
  category            String
  amount              BigInt
  date                DateTime
  expenseSummary      ExpenseSummary @relation(fields: [expenseSummaryId], references: [expenseSummaryId])
}
