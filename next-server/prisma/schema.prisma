generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PROD")
}

model Users {
  email     String   @unique
  ceatedAt  DateTime @default(now())
  id        Int      @id @default(autoincrement())
  password  String
  phone     String?  @unique
  role      String?
  updatedAt DateTime @updatedAt
}

model SpecGroup {
  id        Int         @id @default(autoincrement())
  name      String
  productId Int
  product   Products    @relation(fields: [productId], references: [productId], onDelete: Cascade) // 添加级联删除
  values    SpecValue[]
  sort      Int         @default(0) // 添加排序字段

  @@index([productId])
}

model SpecValue {
  id      Int       @id @default(autoincrement())
  value   String
  groupId Int
  group   SpecGroup @relation(fields: [groupId], references: [id], onDelete: Cascade) // 添加级联删除
  skus    Sku[]     @relation("SkuToSpecValue")
  sort    Int       @default(0) // 添加排序字段

  @@index([groupId])
}

model Category {
  id              Int        @id @default(autoincrement())
  categoryName    String
  description     String?
  parentId        Int?
  subCategoryName String?
  parent          Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  subCategory     Category[] @relation("CategoryHierarchy")
  products        Products[]
}

model Sales {
  saleId      String   @unique
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  productId   Int
  id          Int      @id @default(autoincrement())
  product     Products @relation(fields: [productId], references: [productId])
}

model Purchases {
  purchaseId String   @unique
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float
  productId  Int
  id         Int      @id @default(autoincrement())
  product    Products @relation(fields: [productId], references: [productId])
}

model Expenses {
  expenseId String   @id
  category  String
  amount    Float
  timestamp DateTime
}

model SalesSummary {
  salesSummaryId   String   @id
  totalValue       Float
  changePercentage Float?
  date             DateTime
}

model Products {
  name          String
  rating        Float?
  images        String[] // Changed from image String? to images String[]
  productId     Int         @id @default(autoincrement())
  categoryId    Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  description   String?
  isHot         Boolean?    @default(false)
  isNew         Boolean?    @default(false)
  isPopular     Boolean?    @default(false)
  isRecommend   Boolean?    @default(false)
  storageMethod String?
  category      Category?   @relation(fields: [categoryId], references: [id])
  purchases     Purchases[]
  sales         Sales[]
  skus          Sku[]
  specGroups    SpecGroup[]
}

model Sku {
  id                 Int         @id @default(autoincrement())
  productId          Int
  stock              Int
  code               String?
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  isDefault          Boolean     @default(false)
  memberPrice        Float?
  dimensions         String?
  retailPrice        Float
  weight             Float?
  wholesalePDateTime DateTime?
  wholesalePrice     Float?
  unit               String?
  product            Products    @relation(fields: [productId], references: [productId], onDelete: Cascade)
  specValues         SpecValue[] @relation("SkuToSpecValue")

  // 添加复合索引
  @@index([productId])
  @@index([productId, isDefault])
}

model PurchaseSummary {
  purchaseSummaryId String   @id
  totalPurchased    Float
  changePercentage  Float?
  date              DateTime
}

model ExpenseSummary {
  expenseSummaryId  String              @id
  totalExpenses     Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  expenseByCategoryId String         @id
  expenseSummaryId    String
  category            String
  amount              BigInt
  date                DateTime
  expenseSummary      ExpenseSummary @relation(fields: [expenseSummaryId], references: [expenseSummaryId])
}

model Pictures {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
}

model Customers {
  id          Int      @id @default(autoincrement())
  openid      String   @unique
  phone       String?  @unique
  avatarUrl   String?
  nickName    String?
  gender      Int?
  country     String?
  province    String?
  city        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  session_key String?

  @@unique([id, openid])
}

model Banner {
  id        Int      @id @default(autoincrement())
  title     String?
  image     String
  link      String?
  sort      Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)
}
